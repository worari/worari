
const apiUrl = "https://script.google.com/macros/s/AKfycby5baH4AErWyPJWppos2W5vNi_WZ2YmCsDMfja6Y4_5gXUDqhfaRrTO3ND4OpsNhuOy/exec";

function loadData() {
  const trackId = document.getElementById("trackId").value.trim();
  if (!trackId) {
    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç ‡∏õ‡∏ä‡∏ä.");
    return;
  }

  fetch(`${apiUrl}?id=${trackId}`)
    .then(response => response.json())
    .then(data => {
      const container = document.getElementById("timeline");
      container.innerHTML = "";

      if (!data.result || data.result.length === 0) {
        container.innerHTML = "<p class='text-danger text-center'>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
        return;
      }

      data.result.forEach(entry => {
        const html = `
          <div class="card mb-4 shadow-sm">
            <div class="card-body">
              <h5 class="card-title text-primary">üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á: ${entry['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á'] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}</h5>
              <p class="card-text"><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> ${entry['‡∏ä‡∏∑‡πà‡∏≠'] || ''} ${entry['‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•'] || ''}</p>
              <p class="card-text"><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> ${entry['‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'] || '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£'}</p>
              <p class="card-text"><strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> ${entry['‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏'] || '-'}</p>
            </div>
          </div>`;
        container.innerHTML += html;

        speakThai("‡∏Ñ‡∏∏‡∏ì " + (entry['‡∏ä‡∏∑‡πà‡∏≠'] || '') + " " + (entry['‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•'] || '') + " ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö");
      });
    })
    .catch(error => {
      console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
      document.getElementById("timeline").innerHTML = "<p class='text-danger text-center'>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
    });
}

function speakThai(text) {
  const synth = window.speechSynthesis;
  const utterThis = new SpeechSynthesisUtterance(text);
  const voices = synth.getVoices();
  const thaiVoice = voices.find(voice => voice.lang.startsWith("th"));
  if (thaiVoice) utterThis.voice = thaiVoice;
  synth.speak(utterThis);
}
